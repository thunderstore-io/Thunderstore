version: "3.8"

x-django-service: &django-service
  image: ${DJANGO_IMAGE}
  environment:
    CELERY_BROKER_URL: "pyamqp://django:django@rabbitmq/django"
    DATABASE_URL: "psql://django:django@dbpool/django"
    REDIS_URL: "redis://redis:6379/0"
    SECRET_KEY: "hunter2"
    AWS_ACCESS_KEY_ID: "thunderstore"
    AWS_SECRET_ACCESS_KEY: "thunderstore"
    AWS_S3_REGION_NAME: ""
    AWS_S3_ENDPOINT_URL: "http://minio:9000/"
    AWS_S3_CUSTOM_DOMAIN: "localhost:9000/thunderstore"
    AWS_STORAGE_BUCKET_NAME: "thunderstore"
    AWS_LOCATION: "development"
    AWS_S3_SECURE_URLS: "False"
    USERMEDIA_S3_ENDPOINT_URL: "http://minio:9000/"
    USERMEDIA_S3_SIGNING_ENDPOINT_URL: "http://localhost:9000/"
    USERMEDIA_S3_ACCESS_KEY_ID: "thunderstore"
    USERMEDIA_S3_SECRET_ACCESS_KEY: "thunderstore"
    USERMEDIA_S3_REGION_NAME: ""
    USERMEDIA_S3_STORAGE_BUCKET_NAME: "thunderstore"
    USERMEDIA_S3_LOCATION: "development"
    CACHE_S3_ENDPOINT_URL: "http://minio:9000/"
    CACHE_S3_SIGNING_ENDPOINT_URL: "http://localhost:9000/"
    CACHE_S3_ACCESS_KEY_ID: "thunderstore"
    CACHE_S3_SECRET_ACCESS_KEY: "thunderstore"
    CACHE_S3_REGION_NAME: ""
    CACHE_S3_STORAGE_BUCKET_NAME: "thunderstore"
    CACHE_S3_LOCATION: "development/cache"
  depends_on:
    - db
    - redis
    - rabbitmq
    - minio

services:
  db:
    image: postgres:12.6-alpine@sha256:166da27dd4165a87288da435c92e6ac79e229b2d9c75e59eb576f205a4ed4a0d
    environment:
      POSTGRES_PASSWORD: django
      POSTGRES_USER: django
      POSTGRES_DB: django

  dbpool:
    image: edoburu/pgbouncer:1.15.0@sha256:2f47bf272fa9fdf25c100d11f1972b23af61a351a136d3721bfa6bdb52630426
    environment:
      DATABASE_URL: "postgres://django:django@db/django"
      POOL_MODE: "transaction"
    volumes:
      - ../pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini:ro

  redis:
    image: redis:6.2.1-alpine@sha256:daa795ebec4c206cc7f76e19c4bb26a98dfca671d7b5bedcb38862de078bdaa2
    command: --maxmemory 200mb --maxmemory-policy allkeys-lru

  rabbitmq:
    image: rabbitmq:3.8.14-alpine@sha256:11d8cd02ac340e99de628053f76bb1182ce3df3b41d3e8f399377276ba489409
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: django
      RABBITMQ_DEFAULT_PASS: django
      RABBITMQ_DEFAULT_VHOST: django

  minio:
    image: thunderstore/minio:latest
    environment:
      MINIO_ROOT_USER: thunderstore
      MINIO_ROOT_PASSWORD: thunderstore
    command: server /data

  django:
    <<: *django-service
    entrypoint: pytest
    command: >
      --cov-report=xml:coverage_results/coverage.xml
      --cov-report=term
      --cov /app/
      --splits ${PYTEST_SPLITS:-1}
      --group ${PYTEST_GROUP:-1}
      -n ${PYTEST_NUM_WORKERS:-1}
    volumes:
      - ../coverage_results:/app/coverage_results
