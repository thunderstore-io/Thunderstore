# Generated by Django 3.1.7 on 2025-06-11 21:15

from django.db import migrations

from thunderstore.core.utils import ChoiceEnum


class CommunityMemberRole(ChoiceEnum):
    owner = "owner"
    moderator = "moderator"
    janitor = "janitor"
    member = "member"


def create_user_meta(apps, schema_editor):
    CommunityMembership = apps.get_model("community", "CommunityMembership")
    UserMeta = apps.get_model("account", "UserMeta")

    moderation_roles = {
        CommunityMemberRole.owner,
        CommunityMemberRole.moderator,
        CommunityMemberRole.janitor,
    }

    user_ids_with_memberships = CommunityMembership.objects.values_list(
        "user_id", flat=True
    ).distinct()

    for user_id in user_ids_with_memberships.iterator():
        can_moderate = CommunityMembership.objects.filter(
            user_id=user_id,
            role__in=moderation_roles,
        ).exists()

        meta, _ = UserMeta.objects.get_or_create(user_id=user_id)
        if meta.can_moderate_any_community != can_moderate:
            meta.can_moderate_any_community = can_moderate
            meta.save(update_fields=["can_moderate_any_community"])


class Migration(migrations.Migration):

    dependencies = [
        ("account", "0006_usermeta"),
        ("community", "0035_add_janitor_role"),
    ]

    operations = [
        migrations.RunPython(
            code=create_user_meta, reverse_code=migrations.RunPython.noop
        ),
    ]
