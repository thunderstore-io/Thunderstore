# Generated by Django 3.1.7 on 2025-06-11 21:15

from django.conf import settings
from django.db import migrations

from thunderstore.core.utils import ChoiceEnum


class CommunityMemberRole(ChoiceEnum):
    owner = "owner"
    moderator = "moderator"
    janitor = "janitor"
    member = "member"


def create_user_meta(apps, schema_editor):
    User = apps.get_model("auth", "User")
    Community = apps.get_model("community", "Community")
    CommunityMembership = apps.get_model("community", "CommunityMembership")
    UserMeta = apps.get_model("account", "UserMeta")

    def _get_moderated_communities(user):
        if not user:
            return []

        is_global_moderator = user.is_superuser or (
            user.is_staff
            and user.user_permissions.filter(codename="change_packagelisting").exists()
        )

        if is_global_moderator:
            return list(Community.objects.values_list("pk", flat=True))
        else:
            return list(
                CommunityMembership.objects.filter(
                    user_id=user.id,
                    role__in=[CommunityMemberRole.owner, CommunityMemberRole.moderator],
                ).values_list("community_id", flat=True)
            )

    for user in User.objects.all().iterator():
        if UserMeta.objects.filter(user_id=user.id).exists():
            continue

        can_moderate = bool(_get_moderated_communities(user))
        UserMeta.objects.create(
            user_id=user.id, can_moderate_any_community=can_moderate
        )


class Migration(migrations.Migration):

    dependencies = [
        ("account", "0006_usermeta"),
    ]

    operations = [
        migrations.RunPython(create_user_meta),
    ]
